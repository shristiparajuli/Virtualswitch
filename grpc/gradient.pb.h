// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gradient.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gradient_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_gradient_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_gradient_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gradient_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_gradient_2eproto;
namespace gradient {
class GradientReply;
struct GradientReplyDefaultTypeInternal;
extern GradientReplyDefaultTypeInternal _GradientReply_default_instance_;
class GradientRequest;
struct GradientRequestDefaultTypeInternal;
extern GradientRequestDefaultTypeInternal _GradientRequest_default_instance_;
}  // namespace gradient
PROTOBUF_NAMESPACE_OPEN
template <>
::gradient::GradientReply* Arena::CreateMaybeMessage<::gradient::GradientReply>(Arena*);
template <>
::gradient::GradientRequest* Arena::CreateMaybeMessage<::gradient::GradientRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace gradient {

// ===================================================================


// -------------------------------------------------------------------

class GradientRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gradient.GradientRequest) */ {
 public:
  inline GradientRequest() : GradientRequest(nullptr) {}
  ~GradientRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GradientRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GradientRequest(const GradientRequest& from);
  GradientRequest(GradientRequest&& from) noexcept
    : GradientRequest() {
    *this = ::std::move(from);
  }

  inline GradientRequest& operator=(const GradientRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GradientRequest& operator=(GradientRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GradientRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GradientRequest* internal_default_instance() {
    return reinterpret_cast<const GradientRequest*>(
               &_GradientRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GradientRequest& a, GradientRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GradientRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GradientRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GradientRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GradientRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GradientRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GradientRequest& from) {
    GradientRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GradientRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "gradient.GradientRequest";
  }
  protected:
  explicit GradientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGradientsFieldNumber = 1,
    kWorkerIdFieldNumber = 2,
  };
  // repeated float gradients = 1;
  int gradients_size() const;
  private:
  int _internal_gradients_size() const;

  public:
  void clear_gradients() ;
  float gradients(int index) const;
  void set_gradients(int index, float value);
  void add_gradients(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& gradients() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* mutable_gradients();

  private:
  float _internal_gradients(int index) const;
  void _internal_add_gradients(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& _internal_gradients() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* _internal_mutable_gradients();

  public:
  // string worker_id = 2;
  void clear_worker_id() ;
  const std::string& worker_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_worker_id(Arg_&& arg, Args_... args);
  std::string* mutable_worker_id();
  PROTOBUF_NODISCARD std::string* release_worker_id();
  void set_allocated_worker_id(std::string* ptr);

  private:
  const std::string& _internal_worker_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_worker_id(
      const std::string& value);
  std::string* _internal_mutable_worker_id();

  public:
  // @@protoc_insertion_point(class_scope:gradient.GradientRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<float> gradients_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr worker_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gradient_2eproto;
};// -------------------------------------------------------------------

class GradientReply final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gradient.GradientReply) */ {
 public:
  inline GradientReply() : GradientReply(nullptr) {}
  ~GradientReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GradientReply(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GradientReply(const GradientReply& from);
  GradientReply(GradientReply&& from) noexcept
    : GradientReply() {
    *this = ::std::move(from);
  }

  inline GradientReply& operator=(const GradientReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline GradientReply& operator=(GradientReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GradientReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const GradientReply* internal_default_instance() {
    return reinterpret_cast<const GradientReply*>(
               &_GradientReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GradientReply& a, GradientReply& b) {
    a.Swap(&b);
  }
  inline void Swap(GradientReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GradientReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GradientReply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GradientReply>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GradientReply& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GradientReply& from) {
    GradientReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GradientReply* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "gradient.GradientReply";
  }
  protected:
  explicit GradientReply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // string status = 1;
  void clear_status() ;
  const std::string& status() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* ptr);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:gradient.GradientReply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gradient_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GradientRequest

// repeated float gradients = 1;
inline int GradientRequest::_internal_gradients_size() const {
  return _impl_.gradients_.size();
}
inline int GradientRequest::gradients_size() const {
  return _internal_gradients_size();
}
inline void GradientRequest::clear_gradients() {
  _internal_mutable_gradients()->Clear();
}
inline float GradientRequest::gradients(int index) const {
  // @@protoc_insertion_point(field_get:gradient.GradientRequest.gradients)
  return _internal_gradients(index);
}
inline void GradientRequest::set_gradients(int index, float value) {
  _internal_mutable_gradients()->Set(index, value);
  // @@protoc_insertion_point(field_set:gradient.GradientRequest.gradients)
}
inline void GradientRequest::add_gradients(float value) {
  _internal_add_gradients(value);
  // @@protoc_insertion_point(field_add:gradient.GradientRequest.gradients)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& GradientRequest::gradients() const {
  // @@protoc_insertion_point(field_list:gradient.GradientRequest.gradients)
  return _internal_gradients();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* GradientRequest::mutable_gradients() {
  // @@protoc_insertion_point(field_mutable_list:gradient.GradientRequest.gradients)
  return _internal_mutable_gradients();
}

inline float GradientRequest::_internal_gradients(int index) const {
  return _internal_gradients().Get(index);
}
inline void GradientRequest::_internal_add_gradients(float value) {
  _internal_mutable_gradients()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& GradientRequest::_internal_gradients() const {
  return _impl_.gradients_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* GradientRequest::_internal_mutable_gradients() {
  return &_impl_.gradients_;
}

// string worker_id = 2;
inline void GradientRequest::clear_worker_id() {
  _impl_.worker_id_.ClearToEmpty();
}
inline const std::string& GradientRequest::worker_id() const {
  // @@protoc_insertion_point(field_get:gradient.GradientRequest.worker_id)
  return _internal_worker_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GradientRequest::set_worker_id(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.worker_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:gradient.GradientRequest.worker_id)
}
inline std::string* GradientRequest::mutable_worker_id() {
  std::string* _s = _internal_mutable_worker_id();
  // @@protoc_insertion_point(field_mutable:gradient.GradientRequest.worker_id)
  return _s;
}
inline const std::string& GradientRequest::_internal_worker_id() const {
  return _impl_.worker_id_.Get();
}
inline void GradientRequest::_internal_set_worker_id(const std::string& value) {
  ;


  _impl_.worker_id_.Set(value, GetArenaForAllocation());
}
inline std::string* GradientRequest::_internal_mutable_worker_id() {
  ;
  return _impl_.worker_id_.Mutable( GetArenaForAllocation());
}
inline std::string* GradientRequest::release_worker_id() {
  // @@protoc_insertion_point(field_release:gradient.GradientRequest.worker_id)
  return _impl_.worker_id_.Release();
}
inline void GradientRequest::set_allocated_worker_id(std::string* value) {
  _impl_.worker_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.worker_id_.IsDefault()) {
          _impl_.worker_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gradient.GradientRequest.worker_id)
}

// -------------------------------------------------------------------

// GradientReply

// string status = 1;
inline void GradientReply::clear_status() {
  _impl_.status_.ClearToEmpty();
}
inline const std::string& GradientReply::status() const {
  // @@protoc_insertion_point(field_get:gradient.GradientReply.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GradientReply::set_status(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:gradient.GradientReply.status)
}
inline std::string* GradientReply::mutable_status() {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:gradient.GradientReply.status)
  return _s;
}
inline const std::string& GradientReply::_internal_status() const {
  return _impl_.status_.Get();
}
inline void GradientReply::_internal_set_status(const std::string& value) {
  ;


  _impl_.status_.Set(value, GetArenaForAllocation());
}
inline std::string* GradientReply::_internal_mutable_status() {
  ;
  return _impl_.status_.Mutable( GetArenaForAllocation());
}
inline std::string* GradientReply::release_status() {
  // @@protoc_insertion_point(field_release:gradient.GradientReply.status)
  return _impl_.status_.Release();
}
inline void GradientReply::set_allocated_status(std::string* value) {
  _impl_.status_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gradient.GradientReply.status)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace gradient


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_gradient_2eproto_2epb_2eh
